@model PagedList.IPagedList<PlaneProject.Models.Flights>
@using PagedList.Mvc

@{
    ViewBag.Title = "Flights";
}
<br />  
<br />  
<br />  
<h2>Flights</h2>
<style>
    .dropbtn {
        background-color: #66b3ff;
        transition: 0.3s;
        color: white;
        padding-left: 20px;
        padding-right: 20px;
        padding-top: 10px;
        padding-bottom: 10px;
        border-width: 0px;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #fff;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                background-color: #f5f5f5;
                color: #ffa166;
            }

    .dropdown:hover .dropdown-content {
        display: block;
        color: #ffa166;
        transition: 0.3s;
    }

    .dropdown:hover .dropbtn {
        background-color: #ffa166;
        border-radius: 10px 10px 0px 0px;
    }
</style>
<div class="dropdown" style="float:right;margin-bottom:10px">
    <button class="dropbtn">Element Per Page</button>
    <div class="dropdown-content">
        <a href='@Html.Raw(@Url.Action("Flights", "Home",new {@pageSize=10}))'>10</a>
        <a href='@Html.Raw(@Url.Action("Flights", "Home",new {@pageSize=25}))'>25</a>
        <a href='@Html.Raw(@Url.Action("Flights", "Home",new {@pageSize=50}))'>50 </a>
    </div>
</div>
@if (User.IsInRole("Admin"))
{
    <div>
        @Html.ActionLink("Create Flight", "CreateFlight", "Admin",null, htmlAttributes: new { @class = "btn form-btn" })
    </div>
}
<table class="table">
    <tr style="background-color:#ddd">
        <th>
            Take-off Location
        </th>
        <th>
            Arrival Location
        </th>
        <th>
            Take-off Time
        </th>
        <th>
            Duration
        </th>
        <th>
            Type Of Plane
        </th>
        <th>
            Unique Number
        </th>
        <th>
            Name Pilot
        </th>
        <th>
            Capacity Economy Class
        </th>
        <th>
            Capacity Business Class
        </th>
        <th></th>
    </tr>
    @{ int i = 0;}

    @foreach (var item in Model)
    {
        if (i % 2 == 0)
        {
            i++;
<tr>
    @Html.HiddenFor(modelItem => item.Id)
    <td>
        @Html.DisplayFor(modelItem => item.LocationFrom)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LocationTo)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TimeOfFlight)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Duration)
        hours
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TypeOfPlane)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.UniqueNumberOfPlane)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.NamePilot)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CapacityOfPassengers)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CapacityBusinessClass)
    </td>
    @if (User.IsInRole("Admin"))
    {
        <td>
            <div style="margin-bottom:10px">@Html.ActionLink(linkText: "Edit", actionName: "EditFlight", controllerName: "Admin", routeValues: item, htmlAttributes: new { @class = " btn form-btn" })</div>
            <div>@Html.ActionLink("Delete", "DeleteFlights", controllerName: "Admin", routeValues: item, htmlAttributes: new { @class = " btn form-btn" })</div>
        </td>
    }
    else
    {
        if (item.CapacityBusinessClass == 0 && item.CapacityOfPassengers == 0)
        {
            <td style="transform: rotate(-20deg); transform-origin: 20% 40%;font-family: fantasy;padding-left: 35px;padding-top:35px">Out of stock</td>
        }
        else
        {
            <td>
                @Html.ActionLink("Make Reservation", "MakeReservation", "Home", routeValues: item, htmlAttributes: new { @class = " btn form-btn" })
            </td>
        }
    }

</tr>
        }
        else if (i % 2 == 1)
        {
            i++;
<tr style="background-color:#ddd">
    @Html.HiddenFor(modelItem => item.Id)
    <td>
        @Html.DisplayFor(modelItem => item.LocationFrom)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LocationTo)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TimeOfFlight)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Duration)
        hours
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TypeOfPlane)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.UniqueNumberOfPlane)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.NamePilot)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CapacityOfPassengers)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CapacityBusinessClass)
    </td>
    @if (User.IsInRole("Admin"))
    {
        <td>
            <div style="margin-bottom:10px">@Html.ActionLink(linkText: "Edit", actionName: "EditFlight", controllerName: "Admin", routeValues: item, htmlAttributes: new { @class = " btn form-btn" })</div>
            <div>@Html.ActionLink("Delete", "DeleteFlights", controllerName: "Admin", routeValues: item, htmlAttributes: new { @class = " btn form-btn" })</div>
        </td>
    }
    else
    {
        if (item.CapacityBusinessClass == 0 && item.CapacityOfPassengers == 0)
        {
            <td style="transform: rotate(-20deg); transform-origin: 20% 40%;font-family: fantasy;padding-left: 35px;padding-top:35px">Out of stock</td>
        }
        else
        {
            <td>
                @Html.ActionLink("Make Reservation", "MakeReservation", "Home", routeValues: item, htmlAttributes: new { @class = " btn form-btn" })
            </td>
        }

    }

</tr>
        }
    }

</table>
@Html.PagedListPager(Model, page => Url.Action("Flights",
 new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))